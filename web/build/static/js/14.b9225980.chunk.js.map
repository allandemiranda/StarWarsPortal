{"version":3,"sources":["views/StarshipsList/components/Results/Results.js","views/StarshipsList/StarshipsList.js"],"names":["useStyles","makeStyles","theme","root","content","padding","inner","minWidth","nameCell","display","alignItems","avatar","height","width","marginRight","spacing","actions","justifyContent","Results","props","className","rest","classes","history","useRouter","useState","starships","setStarships","page","setPage","nextPage","setNextPage","progress","setProgress","alertNull","setAlertNull","status","msg","alertAxios","setAlertAxios","useEffect","mounted","axios","get","then","response","data","results","length","next","catch","err","message","clsx","variant","CircularProgress","Card","Divider","CardContent","Table","TableHead","TableRow","TableCell","TableBody","map","starship","key","hover","onClick","push","url","split","style","cursor","name","model","manufacturer","MGLT","CardActions","TablePagination","component","count","labelDisplayedRows","nextIconButtonProps","color","pointerEvents","onChangePage","event","rowsPerPage","rowsPerPageOptions","defaultProps","characters","marginTop","StarshipsList","title","subTitle"],"mappings":"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","file":"static/js/14.b9225980.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow\n} from '@material-ui/core';\nimport { Alert } from 'components';\nimport axios from 'utils/axios';\nimport useRouter from 'utils/useRouter';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [starships, setStarships] = useState([]);\n  const [page, setPage] = useState(0); \n  const [nextPage, setNextPage] = useState(true);  \n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchStarships = () => {\n      setStarships([]);\n      setProgress(true);\n      axios.get('/starships/?page='+(page+1)).then(response => {\n        if (mounted) {          \n          setProgress(false);\n          if(response.data.results.length > 0){\n            setStarships(response.data.results);\n            if(response.data.next === null){\n              setNextPage(false)\n            } else {\n              setNextPage(true)\n            }\n          } else {\n            setAlertNull(true);\n          }\n        }\n      }).catch((err)=>{\n        setProgress(false);\n        setAlertAxios({status: true, msg: err.message + ' !'})\n      });\n    };\n\n    fetchStarships();\n\n    return () => {\n      mounted = false;\n    };\n  }, [page]);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>                    \n                    <TableCell>Name</TableCell>\n                    <TableCell>Model</TableCell>\n                    <TableCell>Manufacturer</TableCell>\n                    <TableCell>MGLT</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {starships.map((starship, key) => (\n                    <TableRow                      \n                      hover\n                      key={key} \n                      onClick={() => history.push('/starship' + starship.url.split('starships')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >                      \n                      <TableCell>{starship.name}</TableCell>\n                      <TableCell>{starship.model}</TableCell>\n                      <TableCell>{starship.manufacturer}</TableCell>\n                      <TableCell>{starship.MGLT}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination            \n            component=\"div\"\n            count={-1} \n            labelDisplayedRows={()=>{false}}\n            nextIconButtonProps={{\n              style: {\n                color: !nextPage ? '#b5b8c4' : null, \n                cursor: !nextPage ? 'not-allowed' : null,\n                pointerEvents: !nextPage ? 'none' : null\n              }\n            }}\n            onChangePage={handleChangePage}\n            page={page}            \n            rowsPerPage={-1}\n            rowsPerPageOptions={[]}                       \n          />\n        </CardActions>\n      </Card>}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string  \n};\n\nResults.defaultProps = {\n  characters: []\n};\n\nexport default Results;\n","/**\n * @description Starships List\n * \n * @author Allan de Miranda\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Page, Header } from 'components';\nimport { Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst StarshipsList = () => {\n  const classes = useStyles(); \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Starships List\"\n    >\n      <Header\n        subTitle={'Starships'}\n        title={'Starships'}\n      />\n      <Results \n        className={classes.results}\n      />\n    </Page>\n  );\n};\n\nexport default StarshipsList;\n"],"sourceRoot":""}