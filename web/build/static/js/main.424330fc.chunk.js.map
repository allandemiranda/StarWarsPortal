{"version":3,"sources":["utils/useRouter.js","utils/axios.js","theme/palette.js","theme/typography.js","theme/overrides/MuiChip.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiInputBase.js","theme/overrides/MuiLinearProgress.js","theme/overrides/MuiListItemIcon.js","theme/overrides/MuiTableHead.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiCardActions.js","theme/overrides/MuiCardContent.js","theme/overrides/MuiCardHeader.js","theme/overrides/MuiOutlinedInput.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableRow.js","theme/overrides/MuiToggleButton.js","theme/overrides/MuiTypography.js","theme/index.js","layouts/Error/Error.js","layouts/Dashboard/components/NavBar/navigationConfig.js","layouts/Dashboard/components/NavBar/NavBar.js","layouts/Dashboard/components/TopBar/TopBar.js","layouts/Dashboard/Dashboard.js","views/Presentation/components/Header/Header.js","views/Presentation/Presentation.js","routes.js","App.js","serviceWorker.js","index.js","components/Navigation/components/NavigationListItem/NavigationListItem.js","components/Navigation/Navigation.js","components/Page/Page.js","components/ScrollReset/ScrollReset.js","components/StatusBullet/StatusBullet.js","components/Alert/Alert.js","components/GenericMoreButton/GenericMoreButton.js","components/Header/Header.js","components/Summary/Summary.js","components/Films/Films.js","components/Vehicles/Vehicles.js","components/Starships/Starships.js","components/Species/Species.js","components/Residents/Residents.js","components/Pilots/Pilots.js","components/People/People.js","components/Homeworld/Homeworld.js","components/Characters/Characters.js","components/Planets/Planets.js"],"names":["useContext","__RouterContext","agent","require","Agent","rejectUnauthorized","instance","axios","create","baseURL","responseType","httpsAgent","crossDomain","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","error","red","text","blueGrey","link","icon","background","default","paper","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","root","backgroundColor","deletable","input","opacity","borderRadius","overflow","colorPrimary","minWidth","MuiButton","contained","boxShadow","MuiCardActions","padding","MuiCardContent","MuiCardHeader","MuiChip","MuiIconButton","MuiInputBase","MuiLinearProgress","MuiListItemIcon","MuiOutlinedInput","notchedOutline","borderColor","MuiPaper","elevation1","MuiTableHead","MuiTableCell","typography","borderBottom","MuiTableRow","MuiToggleButton","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","useStyles","makeStyles","height","Error","props","route","classes","className","fallback","LinearProgress","renderRoutes","routes","title","pages","href","PeopleIcon","FlightIcon","overflowY","content","spacing","profile","display","flexDirection","alignItems","minHeight","avatar","width","name","marginTop","navigation","NavBar","openMobile","onMobileClose","rest","router","useRouter","useEffect","location","pathname","navbarContent","navigationConfig","map","list","component","Hidden","lgUp","Drawer","anchor","onClose","open","variant","clsx","mdDown","Paper","elevation","square","flexGrow","search","flexBasis","searchIcon","marginRight","searchInput","searchPopper","zIndex","appBar","searchPopperContent","trialButton","marginLeft","green","trialIcon","notificationsButton","notificationsBadge","orange","logoutButton","logoutIcon","TopBar","onOpenNavBarMobile","AppBar","Toolbar","to","alt","src","IconButton","onClick","topBar","position","container","flex","navBar","Dashboard","useState","openNavBarMobile","setOpenNavBarMobile","header","breakpoints","values","md","maxWidth","margin","up","buttons","justifyContent","mediaContainer","media","stats","statsInner","Header","Typography","align","Presentation","path","exact","ErrorLayout","lazy","DashboardLayout","PresentationView","history","createBrowserHistory","App","ThemeProvider","utils","MomentUtils","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","CustomRouterLink","forwardRef","ref","style","item","paddingTop","paddingBottom","itemLeaf","buttonLeaf","fontWeightRegular","fontWeightMedium","expandIcon","label","active","NavigationListItem","depth","children","Icon","openProp","Label","setOpen","paddingLeft","ListItem","disableGutters","Button","Collapse","in","activeClassName","defaultProps","NavigationList","List","reduce","items","page","reduceChildRoutes","matchPath","push","Navigation","Component","GA_MEASUREMENT_ID","process","REACT_APP_GA_MEASUREMENT_ID","Page","gtag","page_path","page_name","Helmet","ScrollReset","scrollTo","flexShrink","small","medium","large","info","lightBlue","warning","success","StatusBullet","size","rootClassName","shape","message","action","icons","Alert","displayName","subTitle","Grid","justify","Summary","lg","xl","xs","Films","data","films","setFilms","progress","setProgress","alertNull","setAlertNull","status","msg","alertAxios","setAlertAxios","a","mounted","fetchFilms","length","url","get","split","response","list_films","Promise","all","results","errorMsg","i","splice","CircularProgress","Card","CardHeader","Divider","CardContent","inner","Table","TableHead","TableRow","TableCell","TableBody","film","key","hover","cursor","director","producer","Vehicles","vehicles","setVehicles","fetchVehicles","list_vehicles","vehicle","model","manufacturer","vehicle_class","Starships","starships","setStarships","fetchStarships","list_starships","starship","MGLT","Species","species","setSpecies","fetchSpecies","list_species","specie","language","classification","designation","Residents","people","setPeople","fetchPeople","residents","list_people","person","mass","gender","Pilots","pilots","People","Homeworld","homeworld","setHomeworld","fetchHomeworld","catch","err","selected","climate","diameter","gravity","orbital_period","population","rotation_period","surface_water","terrain","Characters","characters","Planets","planets","setPlanets","fetchPlanets","list_planets","planet"],"mappings":"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","file":"static/js/main.424330fc.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport { __RouterContext } from 'react-router';\n\nexport default () => useContext(__RouterContext);\n","import axios from 'axios';\n\n// eslint-disable-next-line no-undef\nconst https = require('https');\n\nconst agent = new https.Agent({\n  rejectUnauthorized: false,\n});\n\nconst instance = axios.create({\n  baseURL: 'https://swapi.dev/api/',\n  responseType: 'json',\n  httpsAgent: agent,\n  crossDomain: true\n});\n\nexport default instance;\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  link: colors.blue[800],\n  icon: colors.blueGrey[600],\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.blueGrey[50],\n    color: colors.blueGrey[900]\n  },\n  deletable: {\n    '&:focus': {\n      backgroundColor: colors.blueGrey[100]\n    }\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {},\n  input: {\n    '&::placeholder': {\n      opacity: 1,\n      color: palette.text.secondary\n    }\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    borderRadius: 3,\n    overflow: 'hidden'\n  },\n  colorPrimary: {\n    backgroundColor: colors.blueGrey[50]\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    minWidth: 32\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiCardActions from './MuiCardActions';\nimport MuiCardContent from './MuiCardContent';\nimport MuiCardHeader from './MuiCardHeader';\nimport MuiChip from './MuiChip';\nimport MuiIconButton from './MuiIconButton';\nimport MuiInputBase from './MuiInputBase';\nimport MuiLinearProgress from './MuiLinearProgress';\nimport MuiListItemIcon from './MuiListItemIcon';\nimport MuiOutlinedInput from './MuiOutlinedInput';\nimport MuiPaper from './MuiPaper';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableRow from './MuiTableRow';\nimport MuiToggleButton from './MuiToggleButton';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiCardActions,\n  MuiCardContent,\n  MuiCardHeader,\n  MuiChip,\n  MuiIconButton,\n  MuiInputBase,\n  MuiLinearProgress,\n  MuiListItemIcon,\n  MuiOutlinedInput,\n  MuiPaper,\n  MuiTableHead,\n  MuiTableCell,\n  MuiTableRow,\n  MuiToggleButton,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  root: {\n    padding: '16px 24px'\n  }\n};\n","export default {\n  root: {\n    padding: 24\n  }\n};\n","export default {\n  root: {\n    padding: '16px 24px'\n  }\n};\n","export default {\n  root: {},\n  notchedOutline: {\n    borderColor: 'rgba(0,0,0,0.15)'\n  }\n};\n","export default {\n  root: {},\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    '&$selected': {\n      backgroundColor: palette.background.default\n    },\n    '&$hover': {\n      '&:hover': {\n        backgroundColor: palette.background.default\n      }\n    }\n  }\n};\n","import { colors } from '@material-ui/core';\n\nimport palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: colors.grey[100]\n    },\n    '&$selected': {\n      backgroundColor: colors.grey[50],\n      color: palette.primary.main,\n      '&:hover': {\n        backgroundColor: colors.grey[100]\n      }\n    },\n    '&:first-child': {\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4\n    },\n    '&:last-child': {\n      borderTopRightRadius: 4,\n      borderBottomRightRadius: 4\n    }\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides\n});\n\nexport default theme;\n","import React, { Suspense } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst Error = props => {\n  const { route } = props;\n\n  const classes = useStyles();\n\n  return (\n    <main className={classes.root}>\n      <Suspense fallback={<LinearProgress />}>\n        {renderRoutes(route.routes)}\n      </Suspense>\n    </main>\n  );\n};\n\nError.propTypes = {\n  route: PropTypes.object\n};\n\nexport default Error;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport FlightIcon from '@material-ui/icons/Flight';\n\nexport default [\n  {\n    title: 'Pages',\n    pages: [\n      {\n        title: 'Characters',\n        href: '/characters',\n        icon: PeopleIcon\n      },\n      {\n        title: 'Starships',\n        href: '/starships',\n        icon: FlightIcon\n      }\n    ]\n  }\n];\n","import React, { Fragment, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer, Paper } from '@material-ui/core';\nimport { Hidden } from '@material-ui/core';\n\nimport useRouter from 'utils/useRouter';\nimport { Navigation } from 'components';\nimport navigationConfig from './navigationConfig';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    overflowY: 'auto'\n  },\n  content: {\n    padding: theme.spacing(2)\n  },\n  profile: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  navigation: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst NavBar = props => {\n  const { openMobile, onMobileClose, className, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (openMobile) {\n      onMobileClose && onMobileClose();\n    }\n\n    //* eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [router.location.pathname]);\n\n  const navbarContent = (\n    <div className={classes.content}>     \n      <nav className={classes.navigation}>\n        {navigationConfig.map(list => (\n          <Navigation\n            component=\"div\"\n            key={list.title}\n            pages={list.pages}\n            title={list.title}\n          />\n        ))}\n      </nav>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          <div\n            {...rest}\n            className={clsx(classes.root, className)}\n          >\n            {navbarContent}\n          </div>\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Paper\n          {...rest}\n          className={clsx(classes.root, className)}\n          elevation={1}\n          square\n        >\n          {navbarContent}\n        </Paper>\n      </Hidden>\n    </Fragment>\n  );\n};\n\nNavBar.propTypes = {\n  className: PropTypes.string,\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Hidden,\n  colors\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  search: {\n    backgroundColor: 'rgba(255,255,255, 0.1)',\n    borderRadius: 4,\n    flexBasis: 300,\n    height: 36,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: 'inherit'\n  },\n  searchInput: {\n    flexGrow: 1,\n    color: 'inherit',\n    '& input::placeholder': {\n      opacity: 1,\n      color: 'inherit'\n    }\n  },\n  searchPopper: {\n    zIndex: theme.zIndex.appBar + 100\n  },\n  searchPopperContent: {\n    marginTop: theme.spacing(1)\n  },\n  trialButton: {\n    marginLeft: theme.spacing(2),\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  trialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  notificationsButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsBadge: {\n    backgroundColor: colors.orange[600]\n  },\n  logoutButton: {\n    marginLeft: theme.spacing(1)\n  },\n  logoutIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TopBar = props => {\n  const { onOpenNavBarMobile, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/star-wars.png\"\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />               \n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onOpenNavBarMobile}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>      \n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { Suspense, useState } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nimport { NavBar, TopBar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  topBar: {\n    zIndex: 2,\n    position: 'relative'\n  },\n  container: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  navBar: {\n    zIndex: 3,\n    width: 256,\n    minWidth: 256,\n    flex: '0 0 auto'\n  },\n  content: {\n    overflowY: 'auto',\n    flex: '1 1 auto'\n  }\n}));\n\nconst Dashboard = props => {\n  const { route } = props;\n\n  const classes = useStyles();\n  const [openNavBarMobile, setOpenNavBarMobile] = useState(false);\n\n  const handleNavBarMobileOpen = () => {\n    setOpenNavBarMobile(true);\n  };\n\n  const handleNavBarMobileClose = () => {\n    setOpenNavBarMobile(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TopBar\n        className={classes.topBar}\n        onOpenNavBarMobile={handleNavBarMobileOpen}\n      />\n      <div className={classes.container}>\n        <NavBar\n          className={classes.navBar}\n          onMobileClose={handleNavBarMobileClose}\n          openMobile={openNavBarMobile}\n        />\n        <main className={classes.content}>\n          <Suspense fallback={<LinearProgress />}>\n            {renderRoutes(route.routes)}\n          </Suspense>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  route: PropTypes.object\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.white\n  },\n  header: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: '80px 24px',\n    [theme.breakpoints.up('md')]: {\n      padding: '160px 24px'\n    }\n  },\n  buttons: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  mediaContainer: {\n    margin: '0 auto',\n    maxWidth: 1600,\n    padding: theme.spacing(0, 2),\n    overflow: 'hidden'\n  },\n  media: {\n    width: '100%'\n  },\n  stats: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(1)\n  },\n  statsInner: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    margin: '0 auto'\n  }\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.header}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h1\"\n        >\n          Welcome to the Star Wars Portal fanpage\n        </Typography>\n        <Typography\n          align=\"center\"\n          component=\"h2\"\n          variant=\"subtitle1\"\n        >\n          Here you will find all the details of the Star Wars.\n        </Typography>        \n      </div>      \n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/**\n * @description Welcome screen\n * \n * @author Allan de Miranda\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Page } from 'components';\nimport { Header } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Presentation = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Home\"\n    >\n      <Header />\n    </Page>\n  );\n};\n\nexport default Presentation;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { lazy } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport ErrorLayout from './layouts/Error';\nimport DashboardLayout from './layouts/Dashboard';\nimport PresentationView from './views/Presentation';\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/presentation\" />\n  },\n  {\n    path: '/errors',\n    component: ErrorLayout,\n    routes: [\n      {\n        path: '/errors/error-401',\n        exact: true,\n        component: lazy(() => import('views/Error401'))\n      },\n      {\n        path: '/errors/error-404',\n        exact: true,\n        component: lazy(() => import('views/Error404'))\n      },\n      {\n        path: '/errors/error-500',\n        exact: true,\n        component: lazy(() => import('views/Error500'))\n      },\n      {\n        component: () => <Redirect to=\"/errors/error-404\" />\n      }\n    ]\n  },\n  {\n    route: '*',\n    component: DashboardLayout,\n    routes: [\n      {\n        path: '/specie/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Specie'))\n      },\n      {\n        path: '/planet/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Planet'))\n      },\n      {\n        path: '/film/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Film'))\n      },\n      {\n        path: '/vehicle/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Vehicle'))\n      },\n      {\n        path: '/starship/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Starship'))\n      },\n      {\n        path: '/person/:id/:tab',\n        exact: true,\n        component: lazy(()=> import('views/Person'))\n      },\n      {\n        path: '/characters',\n        exact: true,\n        component: lazy(()=> import('views/CharactersList'))\n      },\n      {\n        path: '/starships',\n        exact: true,\n        component: lazy(()=> import('views/StarshipsList'))\n      },\n      {\n        path: '/presentation',\n        exact: true,\n        component: PresentationView\n      },\n      {\n        component: () => <Redirect to=\"/errors/error-404\" />\n      }\n    ]\n  }\n];\n\nexport default routes;","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport MomentUtils from '@date-io/moment';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { renderRoutes } from 'react-router-config';\n\nimport theme from './theme';\nimport routes from './routes';\nimport { ScrollReset } from './components';\nimport './assets/scss/index.scss';\n\nconst history = createBrowserHistory();\n\nconst App = () => {\n  return (\n\n    <ThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Router history={history}>\n          <ScrollReset />\n          {renderRoutes(routes)}\n        </Router>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in projection, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'projection' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","/* eslint-disable react/display-name */\nimport React, { useState, forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { ListItem, Button, Collapse, colors } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  itemLeaf: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%'\n  },\n  buttonLeaf: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightRegular,\n    '&.depth-0': {\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  },\n  icon: {\n    color: theme.palette.icon,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  expandIcon: {\n    marginLeft: 'auto',\n    height: 16,\n    width: 16\n  },\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavigationListItem = props => {\n  const {\n    title,\n    href,\n    depth,\n    children,\n    icon: Icon,\n    className,\n    open: openProp,\n    label: Label,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(openProp);\n\n  const handleToggle = () => {\n    setOpen(open => !open);\n  };\n\n  let paddingLeft = 8;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  }\n\n  const style = {\n    paddingLeft\n  };\n\n  if (children) {\n    return (\n      <ListItem\n        {...rest}\n        className={clsx(classes.item, className)}\n        disableGutters\n      >\n        <Button\n          className={classes.button}\n          onClick={handleToggle}\n          style={style}\n        >\n          {Icon && <Icon className={classes.icon} />}\n          {title}\n          {open ? (\n            <ExpandLessIcon\n              className={classes.expandIcon}\n              color=\"inherit\"\n            />\n          ) : (\n            <ExpandMoreIcon\n              className={classes.expandIcon}\n              color=\"inherit\"\n            />\n          )}\n        </Button>\n        <Collapse in={open}>{children}</Collapse>\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        {...rest}\n        className={clsx(classes.itemLeaf, className)}\n        disableGutters\n      >\n        <Button\n          activeClassName={classes.active}\n          className={clsx(classes.buttonLeaf, `depth-${depth}`)}\n          component={CustomRouterLink}\n          exact\n          style={style}\n          to={href}\n        >\n          {Icon && <Icon className={classes.icon} />}\n          {title}\n          {Label && (\n            <span className={classes.label}>\n              <Label />\n            </span>\n          )}\n        </Button>\n      </ListItem>\n    );\n  }\n};\n\nNavigationListItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  depth: PropTypes.number.isRequired,\n  href: PropTypes.string,\n  icon: PropTypes.any,\n  label: PropTypes.any,\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired\n};\n\nNavigationListItem.defaultProps = {\n  depth: 0,\n  open: false\n};\n\nexport default NavigationListItem;\n","/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, Typography } from '@material-ui/core';\n\nimport useRouter from 'utils/useRouter';\nimport { NavigationListItem } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst NavigationList = props => {\n  const { pages, ...rest } = props;\n\n  return (\n    <List>\n      {pages.reduce(\n        (items, page) => reduceChildRoutes({ items, page, ...rest }),\n        []\n      )}\n    </List>\n  );\n};\n\nNavigationList.propTypes = {\n  depth: PropTypes.number,\n  pages: PropTypes.array\n};\n\nconst reduceChildRoutes = props => {\n  const { router, items, page, depth } = props;\n\n  if (page.children) {\n    const open = matchPath(router.location.pathname, {\n      path: page.href,\n      exact: false\n    });\n\n    items.push(\n      <NavigationListItem\n        depth={depth}\n        icon={page.icon}\n        key={page.title}\n        label={page.label}\n        open={Boolean(open)}\n        title={page.title}\n      >\n        <NavigationList\n          depth={depth + 1}\n          pages={page.children}\n          router={router}\n        />\n      </NavigationListItem>\n    );\n  } else {\n    items.push(\n      <NavigationListItem\n        depth={depth}\n        href={page.href}\n        icon={page.icon}\n        key={page.title}\n        label={page.label}\n        title={page.title}\n      />\n    );\n  }\n\n  return items;\n};\n\nconst Navigation = props => {\n  const { title, pages, className, component: Component, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  return (\n    <Component\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {title && <Typography variant=\"overline\">{title}</Typography>}\n      <NavigationList\n        depth={0}\n        pages={pages}\n        router={router}\n      />\n    </Component>\n  );\n};\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  component: PropTypes.any,\n  pages: PropTypes.array.isRequired,\n  title: PropTypes.string\n};\n\nNavigation.defaultProps = {\n  component: 'nav'\n};\n\nexport default Navigation;\n","/* eslint-disable no-undef */\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nimport useRouter from 'utils/useRouter';\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst Page = props => {\n  const { title, children, ...rest } = props;\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (NODE_ENV !== 'production') {\n      return;\n    }\n\n    if (window.gtag) {\n      window.gtag('config', GA_MEASUREMENT_ID, {\n        page_path: router.location.pathname,\n        page_name: title\n      });\n    }\n  }, [title, router]);\n\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect } from 'react';\n\nimport useRouter from 'utils/useRouter';\n\nconst ScrollReset = () => {\n  const router = useRouter();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [router.location.pathname]);\n\n  return null;\n};\n\nexport default ScrollReset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  small: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  medium: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  large: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  default: {\n    backgroundColor: colors.grey[50]\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: colors.lightBlue[600]\n  },\n  warning: {\n    backgroundColor: colors.orange[900]\n  },\n  error: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: colors.green[600]\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes[size]]: size,\n      [classes[color]]: color\n    },\n    className\n  );\n\n  return (\n    <span\n      {...rest}\n      className={rootClassName}\n      //\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'medium',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, IconButton, Typography, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport ErrorIcon from '@material-ui/icons/ErrorOutlined';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport WarningIcon from '@material-ui/icons/WarningOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius\n  },\n  default: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  success: {\n    backgroundColor: colors.green[600],\n    color: theme.palette.white\n  },\n  info: {\n    backgroundColor: colors.lightBlue[600],\n    color: theme.palette.white\n  },\n  warning: {\n    backgroundColor: colors.orange[900],\n    color: theme.palette.white\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n  message: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 0'\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: theme.spacing(1)\n  },\n  action: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    paddingLeft: 16,\n    marginRight: -8\n  }\n}));\n\nconst icons = {\n  default: <InfoIcon />,\n  success: <CheckCircleIcon />,\n  info: <InfoIcon />,\n  warning: <WarningIcon />,\n  error: <ErrorIcon />\n};\n\nconst Alert = forwardRef((props, ref) => {\n  const { className, icon, variant, message, onClose, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, classes[variant], className)}\n      component={Typography}\n      elevation={1}\n      ref={ref}\n    >\n      <span className={classes.icon}>{icon || icons[variant]}</span>\n      {message}\n      {onClose && (\n        <IconButton\n          className={classes.action}\n          color=\"inherit\"\n          key=\"close\"\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    </Paper>\n  );\n});\n\nAlert.displayName = 'Alert';\n\nAlert.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.node,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['default', 'info', 'success', 'warning', 'error'])\n};\n\nAlert.defaultProps = {\n  variant: 'default'\n};\n\nexport default Alert;","import React, { Fragment, useRef, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PrintIcon from '@material-ui/icons/Print';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({}));\n\nconst GenericMoreButton = props => {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Fragment>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          size=\"small\"\n        >\n          <MoreIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        classes={{ paper: classes.menu }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy to clipboard\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export as PDF\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PrintIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Print\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </Fragment>\n  );\n};\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\n/**\n * Page information header\n * \n * @param {String} subTitle The header sub title\n * @param {String} title The header title\n * \n * @author Allan de Miranda\n */\nconst Header = props => {\n  const { className, subTitle, title, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            {subTitle}\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            {title}\n          </Typography>\n        </Grid>        \n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * The header sub title\n   */\n  subTitle: PropTypes.string.isRequired,\n  /**\n   * The header title\n   */\n  title: PropTypes.string.isRequired  \n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\n/**\n * Summary information grid\n * \n * @param {Object} component Component info to grid\n * \n * @author Allan de Miranda\n */\nconst Summary = props => {\n  const { className, component, ...rest } = props;\n\n  const classes = useStyles();  \n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={12}\n        md={12}\n        xl={12}\n        xs={12}\n      >\n        {component}\n      </Grid> \n    </Grid>\n  );\n};\n\nSummary.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * Component to grid\n   */\n  component: PropTypes.object.isRequired\n};\n\nexport default Summary;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Film resource is a single film\n * \n * @param {Array} data A list of film url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Films = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [films, setFilms] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchFilms = async () => {\n      if(!data.films){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.films.length > 0){\n          const list_films = await data.films.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_films)\n            setFilms(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchFilms();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(films.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<films.length; ++i){\n        if(films[i].status !== 200){\n          errorMsg = films[i].status;\n          films.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(films.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[films])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n       <Card>\n         <CardHeader\n           \n           title={title}\n         />\n         <Divider />\n         <CardContent className={classes.content}>\n           <PerfectScrollbar>\n             <div className={classes.inner}>\n               <Table>\n                 <TableHead>\n                   <TableRow>\n                     <TableCell>Title</TableCell>\n                     <TableCell>Director</TableCell>\n                     <TableCell>Producer</TableCell>   \n                   </TableRow>\n                 </TableHead>\n                 <TableBody>\n                   {films.map((film, key) => (\n                     <TableRow \n                       hover\n                       key={key}\n                       onClick={() => history.push('/film' + film.data.url.split('films')[1] + 'summary')}\n                       style={{cursor: 'pointer'}}\n                     >\n                       <TableCell>{film.data.title}</TableCell>\n                       <TableCell>{film.data.director}</TableCell>\n                       <TableCell>{film.data.producer}</TableCell>\n                     </TableRow>\n                   ))}\n                 </TableBody>\n               </Table>\n             </div>\n           </PerfectScrollbar>\n         </CardContent>\n       </Card>}\n    </div>\n  );\n};\n\nFilms.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Films;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Vehicle resource is a single transport craft that does not have hyperdrive capability\n * \n * @param {Array} data A list of vehicle url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Vehicles = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [vehicles, setVehicles] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchVehicles = async () => {\n      if(!data.vehicles){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.vehicles.length > 0){\n          const list_vehicles = await data.vehicles.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_vehicles)\n            setVehicles(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchVehicles();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(vehicles.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<vehicles.length; ++i){\n        if(vehicles[i].status !== 200){\n          errorMsg = vehicles[i].status;\n          vehicles.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(vehicles.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[vehicles])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Model</TableCell>\n                    <TableCell>Manufacturer</TableCell>   \n                    <TableCell>Class</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {vehicles.map((vehicle, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/vehicle' + vehicle.data.url.split('vehicles')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{vehicle.data.name}</TableCell>\n                      <TableCell>{vehicle.data.model}</TableCell>\n                      <TableCell>{vehicle.data.manufacturer}</TableCell>\n                      <TableCell>{vehicle.data.vehicle_class}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nVehicles.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Vehicles;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Starship resource is a single transport craft that has hyperdrive capability\n * \n * @param {Array} data A list of starship url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Starships = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [starships, setStarships] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchStarships = async () => {\n      if(!data.starships){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.starships.length > 0){\n          const list_starships = await data.starships.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_starships)\n            setStarships(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchStarships();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(starships.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<starships.length; ++i){\n        if(starships[i].status !== 200){\n          errorMsg = starships[i].status;\n          starships.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(starships.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[starships])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Model</TableCell>\n                    <TableCell>Manufacturer</TableCell>   \n                    <TableCell>MGLT</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {starships.map((starship, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/starship' + starship.data.url.split('starships')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{starship.data.name}</TableCell>\n                      <TableCell>{starship.data.model}</TableCell>\n                      <TableCell>{starship.data.manufacturer}</TableCell>\n                      <TableCell>{starship.data.MGLT}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nStarships.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Starships;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Species resource is a type of person or character within the Star Wars Universe\n * \n * @param {Array} data A list of species url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Species = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [species, setSpecies] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchSpecies = async () => {\n      if(!data.species){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.species.length > 0){\n          const list_species = await data.species.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_species)\n            setSpecies(results);\n          }\n        } else{\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchSpecies();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(species.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<species.length; ++i){\n        if(species[i].status !== 200){\n          errorMsg = species[i].status;\n          species.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(species.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[species])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n       <Card>\n         <CardHeader\n           \n           title={title}\n         />\n         <Divider />\n         <CardContent className={classes.content}>\n           <PerfectScrollbar>\n             <div className={classes.inner}>\n               <Table>\n                 <TableHead>\n                   <TableRow>\n                     <TableCell>Name</TableCell>\n                     <TableCell>Language</TableCell>\n                     <TableCell>Classification</TableCell>   \n                     <TableCell>Designation</TableCell> \n                   </TableRow>\n                 </TableHead>\n                 <TableBody>\n                   {species.map((specie, key) => (\n                     <TableRow \n                       hover\n                       key={key}\n                       onClick={() => history.push('/specie' + specie.data.url.split('species')[1] + 'summary')}\n                       style={{cursor: 'pointer'}}\n                     >\n                       <TableCell>{specie.data.name}</TableCell>\n                       <TableCell>{specie.data.language}</TableCell>\n                       <TableCell>{specie.data.classification}</TableCell>\n                       <TableCell>{specie.data.designation}</TableCell>\n                     </TableRow>\n                   ))}\n                 </TableBody>\n               </Table>\n             </div>\n           </PerfectScrollbar>\n         </CardContent>\n       </Card>}\n    </div>\n  );\n};\n\nSpecies.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of species url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Species;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A People resource is an individual person or character within the Star Wars universe\n * \n * @param {Array} data A list of person url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Residents = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [people, setPeople] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchPeople = async () => {\n      if(!data.residents){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.residents.length > 0){\n          const list_people = await data.residents.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_people)\n            setPeople(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchPeople();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(people.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<people.length; ++i){\n        if(people[i].status !== 200){\n          errorMsg = people[i].status;\n          people.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(people.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[people])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Mass</TableCell>\n                    <TableCell>Height</TableCell>   \n                    <TableCell>Gender</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {people.map((person, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/person' + person.data.url.split('people')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{person.data.name}</TableCell>\n                      <TableCell>{person.data.mass} {' kilograms'}</TableCell>\n                      <TableCell>{person.data.height} {' centimeters'}</TableCell>\n                      <TableCell>{person.data.gender}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nResidents.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Residents;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A People resource is an individual person or character within the Star Wars universe\n * \n * @param {Array} data A list of person url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Pilots = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [people, setPeople] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchPeople = async () => {\n      if(!data.pilots){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.pilots.length > 0){\n          const list_people = await data.pilots.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_people)\n            setPeople(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchPeople();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(people.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<people.length; ++i){\n        if(people[i].status !== 200){\n          errorMsg = people[i].status;\n          people.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(people.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[people])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Mass</TableCell>\n                    <TableCell>Height</TableCell>   \n                    <TableCell>Gender</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {people.map((person, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/person' + person.data.url.split('people')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{person.data.name}</TableCell>\n                      <TableCell>{person.data.mass} {' kilograms'}</TableCell>\n                      <TableCell>{person.data.height} {' centimeters'}</TableCell>\n                      <TableCell>{person.data.gender}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nPilots.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Pilots;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A People resource is an individual person or character within the Star Wars universe\n * \n * @param {Array} data A list of person url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst People = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [people, setPeople] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchPeople = async () => {\n      if(!data.people){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.people.length > 0){\n          const list_people = await data.people.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_people)\n            setPeople(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchPeople();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(people.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<people.length; ++i){\n        if(people[i].status !== 200){\n          errorMsg = people[i].status;\n          people.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(people.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[people])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Mass</TableCell>\n                    <TableCell>Height</TableCell>   \n                    <TableCell>Gender</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {people.map((person, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/person' + person.data.url.split('people')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{person.data.name}</TableCell>\n                      <TableCell>{person.data.mass} {' kilograms'}</TableCell>\n                      <TableCell>{person.data.height} {' centimeters'}</TableCell>\n                      <TableCell>{person.data.gender}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nPeople.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default People;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useRouter from 'utils/useRouter';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Planet resource is a large mass, planet or planetoid in the Star Wars Universe, at the time of 0 ABY\n * \n * @param {Array} data A list of planet url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Homeworld = props => {\n  const { className, data, title, ...rest } = props;\n\n  const { history } = useRouter();\n  const classes = useStyles();\n\n  const [homeworld, setHomeworld] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchHomeworld = async () => {  \n      if(!data.homeworld){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        const response = await axios.get(data.homeworld.split('/api')[1]).catch((err)=>{\n          setProgress(false);\n          setAlertAxios({status: true, msg: err.message});\n          mounted = false;\n        })\n        if (mounted) {\n          const results = await Promise.all([response]);\n          setProgress(false);\n          if(results[0].status === 200){            \n            setHomeworld(results[0].data);\n          }\n        }\n      }\n    };\n\n    await fetchHomeworld();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <Table>\n            <TableBody>            \n              <TableRow\n                onClick={() => history.push('/planet' + homeworld.url.split('planets')[1] + 'summary')}\n                selected\n                style={{cursor: 'pointer'}}\n              >\n                <TableCell>Name</TableCell>\n                <TableCell>{homeworld.name}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Climate</TableCell>\n                <TableCell>{homeworld.climate}</TableCell>\n              </TableRow>\n              <TableRow selected>\n                <TableCell>Diameter</TableCell>\n                <TableCell>{homeworld.diameter} {' kilometers'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Gravity</TableCell>\n                <TableCell>{homeworld.gravity} {' standard G'}</TableCell>\n              </TableRow>\n              <TableRow selected>\n                <TableCell>Orbital Period</TableCell>\n                <TableCell>{homeworld.orbital_period} {' hours'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Population</TableCell>\n                <TableCell>{homeworld.population}</TableCell>\n              </TableRow>\n              <TableRow selected>\n                <TableCell>Rotation Period</TableCell>\n                <TableCell>{homeworld.rotation_period} {' days'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Surface Water</TableCell>\n                <TableCell>{homeworld.surface_water}{' percentage of the planet surface'}</TableCell>\n              </TableRow>\n              <TableRow selected>\n                <TableCell>Terrain</TableCell>\n                <TableCell>{homeworld.terrain}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </CardContent>        \n      </Card>}\n    </div>\n  );\n};\n\nHomeworld.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Homeworld;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A People resource is an individual person or character within the Star Wars universe\n * \n * @param {Array} data A list of person url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Characters = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [people, setPeople] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchPeople = async () => {\n      if(!data.characters){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.characters.length > 0){\n          const list_people = await data.characters.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_people)\n            setPeople(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchPeople();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(people.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<people.length; ++i){\n        if(people[i].status !== 200){\n          errorMsg = people[i].status;\n          people.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(people.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[people])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n      <Card>\n        <CardHeader\n          \n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Mass</TableCell>\n                    <TableCell>Height</TableCell>   \n                    <TableCell>Gender</TableCell> \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {people.map((person, key) => (\n                    <TableRow \n                      hover\n                      key={key}\n                      onClick={() => history.push('/person' + person.data.url.split('people')[1] + 'summary')}\n                      style={{cursor: 'pointer'}}\n                    >\n                      <TableCell>{person.data.name}</TableCell>\n                      <TableCell>{person.data.mass} {' kilograms'}</TableCell>\n                      <TableCell>{person.data.height} {' centimeters'}</TableCell>\n                      <TableCell>{person.data.gender}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>}\n    </div>\n  );\n};\n\nCharacters.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Characters;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport useRouter from 'utils/useRouter';\nimport axios from 'utils/axios';\nimport { Alert } from 'components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  }\n}));\n\n/**\n * A Planet resource is a large mass, planet or planetoid in the Star Wars Universe, at the time of 0 ABY\n * \n * @param {Array} data A list of planet url\n * @param {String} title The list title\n * \n * @author Allan de Miranda\n */\nconst Planets = props => {\n  const { className, data, title, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n\n  const [planets, setPlanets] = useState([]);\n  const [progress, setProgress] = useState(true);\n  const [alertNull, setAlertNull] = useState(false);\n  const [alertAxios, setAlertAxios] = useState({status: false, msg: ''});\n\n  useEffect(async () => {\n    let mounted = true;\n\n    const fetchPlanets = async () => {\n      if(!data.planets){\n        setProgress(false);\n        setAlertAxios({status: true, msg: 'Server Error'})\n      } else {\n        if(data.planets.length > 0){\n          const list_planets = await data.planets.map(async (url)=>{\n            const response = await axios.get(url.split('/api')[1])\n            return response\n          })\n          if (mounted) {\n            const results = await Promise.all(list_planets)\n            setPlanets(results);\n          }\n        } else {\n          setProgress(false);\n          setAlertNull(true);\n        }\n      }\n    };\n\n    await fetchPlanets();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(()=>{\n    if(planets.length > 0){\n      var errorMsg = 'Error!';\n      for(var i=0; i<planets.length; ++i){\n        if(planets[i].status !== 200){\n          errorMsg = planets[i].status;\n          planets.splice(i,1);\n          --i;\n        }\n      }\n      setProgress(false);\n      if(planets.length === 0){\n        setAlertAxios({status: true, msg: errorMsg})\n      }\n    }\n  },[planets])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {alertAxios.status ? \n        <Alert\n          message={alertAxios.msg}\n          variant={'error'}\n        /> : null }\n      \n      {alertNull ? \n        <Alert\n          message={'There is no information here!'}\n          variant={'warning'}\n        /> : null }\n\n      {progress ? <CircularProgress/> : !alertNull && !alertAxios.status &&\n       <Card>\n         <CardHeader\n           \n           title={title}\n         />\n         <Divider />\n         <CardContent className={classes.content}>\n           <PerfectScrollbar>\n             <div className={classes.inner}>\n               <Table>\n                 <TableHead>\n                   <TableRow>\n                     <TableCell>Name</TableCell>\n                     <TableCell>Climate</TableCell>\n                     <TableCell>Diameter</TableCell>  \n                     <TableCell>Population</TableCell>  \n                   </TableRow>\n                 </TableHead>\n                 <TableBody>\n                   {planets.map((planet, key) => (\n                     <TableRow \n                       hover\n                       key={key}\n                       onClick={() => history.push('/planet' + planet.data.url.split('planets')[1] + 'summary')}\n                       style={{cursor: 'pointer'}}\n                     >\n                       <TableCell>{planet.data.name}</TableCell>\n                       <TableCell>{planet.data.climate}</TableCell>\n                       <TableCell>{planet.data.diameter} {' kilometers'}</TableCell>\n                       <TableCell>{planet.data.population}</TableCell>\n                     </TableRow>\n                   ))}\n                 </TableBody>\n               </Table>\n             </div>\n           </PerfectScrollbar>\n         </CardContent>\n       </Card>}\n    </div>\n  );\n};\n\nPlanets.propTypes = {\n  /**\n   * Class component\n   */\n  className: PropTypes.string,\n  /**\n   * A list of person url\n   */\n  data: PropTypes.any.isRequired,\n  /**\n   * The list title\n   */\n  title: PropTypes.string.isRequired\n};\n\nexport default Planets;\n"],"sourceRoot":""}