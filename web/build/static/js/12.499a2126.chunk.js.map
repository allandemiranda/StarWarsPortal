{"version":3,"sources":["views/Specie/components/SpecieInfo/SpecieInfo.js","views/Specie/Specie.js"],"names":["useStyles","makeStyles","theme","root","content","padding","actions","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","spacing","SpecieInfo","props","specie","className","rest","classes","useState","progress","setProgress","useEffect","CircularProgress","Card","clsx","CardHeader","title","Divider","CardContent","Table","TableBody","TableRow","selected","TableCell","average_height","average_lifespan","designation","eye_colors","hair_colors","language","skin_colors","tabs","marginTop","divider","backgroundColor","colors","grey","Specie","match","history","params","id","tab","value","label","to","find","t","setSpecie","error","setError","mounted","axios","get","then","response","data","catch","subTitle","name","Tabs","onChange","event","push","scrollButtons","variant","map","Tab","component","message"],"mappings":"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","file":"static/js/12.499a2126.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst SpecieInfo = props => {\n  const { specie, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [progress, setProgress] = useState(true);\n\n  useEffect(()=>{\n    if(specie){\n      setProgress(false)\n    }\n  },[specie])\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> : \n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          <CardHeader \n            \n            title=\"Specie info\" \n          />\n          <Divider />\n          <CardContent className={classes.content}>\n            <Table>\n              <TableBody>            \n                <TableRow selected >\n                  <TableCell>Average Height</TableCell>\n                  <TableCell>{specie.average_height} {' centimeters'}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Average Lifespan</TableCell>\n                  <TableCell>{specie.average_lifespan} {' years'}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Designation</TableCell>\n                  <TableCell>{specie.designation}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Eye Colors</TableCell>\n                  <TableCell>{specie.eye_colors}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Hair Colors</TableCell>\n                  <TableCell>{specie.hair_colors}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Language</TableCell>\n                  <TableCell>{specie.language}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Skin Colors</TableCell>\n                  <TableCell>{specie.skin_colors}</TableCell>\n                </TableRow>                                        \n              </TableBody>\n            </Table>\n          </CardContent>   \n        </Card>}\n    </div>\n  );\n};\n\nSpecieInfo.propTypes = {\n  className: PropTypes.string,\n  specie: PropTypes.object.isRequired,  \n};\n\nexport default SpecieInfo;\n","/**\n * @description Specie details\n * \n * @author Allan de Miranda\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { \n  Page, \n  Header, \n  Summary, \n  Films, \n  People,\n  Alert,\n  Homeworld\n} from 'components';\nimport { SpecieInfo } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)     \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Specie = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'films', label: 'Films' },\n    { value: 'homeworld', label: 'Homeworld'},\n    { value: 'people', label: 'People' }\n  ];\n\n  if (!tab) {\n    return <Redirect to={`/specie/${id}/summary`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  const [specie, setSpecie] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSpecie = () => {\n      axios.get('/species/'+ id +'/').then(response => {\n        if (mounted) {\n          setSpecie(response.data); \n        }\n      }).catch((error)=>{\n        setError(error)\n      });\n    };\n\n    fetchSpecie();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!specie) {\n    if(error){\n      return (\n        <Page\n          className={classes.root}\n          title=\"Specie Details\"\n        >\n          <Alert\n            message={error.message}\n            variant={'error'}\n          />\n        </Page>);\n    } else {\n      return null;\n    }\n  }\n\n  return (      \n    <Page\n      className={classes.root}\n      title=\"Specie Details\"\n    >\n      <Header \n        subTitle={'Specie'}\n        title={specie.name} \n      />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'summary' && \n        <Summary \n          component={<SpecieInfo specie={specie} />}\n        />}\n        {tab === 'films' && \n        <Films \n          data={specie} \n          title={'Specie Films'} \n        />}\n        {tab === 'homeworld' && \n        <Homeworld \n          data={specie} \n          title={'Specie Homeworld'} \n        />}\n        {tab === 'people' && \n        <People \n          data={specie}\n          title={'Specie People'}\n        />}        \n      </div>\n    </Page>\n  );\n};\n\nSpecie.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Specie;\n"],"sourceRoot":""}