{"version":3,"sources":["views/Person/components/PersonInfo/PersonInfo.js","views/Person/Person.js"],"names":["useStyles","makeStyles","theme","root","content","padding","actions","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","spacing","PersonInfo","props","person","className","rest","classes","useState","homeworld","setHomeworld","progress","setProgress","useEffect","mounted","homeworld_url","split","axios","get","then","response","data","fetchHomeworld","CircularProgress","Card","clsx","CardHeader","title","Divider","CardContent","Table","TableBody","TableRow","selected","TableCell","birth_year","eye_color","gender","hair_color","height","name","mass","skin_color","tabs","marginTop","divider","backgroundColor","colors","grey","Person","match","history","params","id","tab","value","label","to","find","t","setPerson","error","setError","catch","subTitle","Tabs","onChange","event","push","scrollButtons","variant","map","Tab","component","message"],"mappings":"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","file":"static/js/10.a06556a4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport axios from 'utils/axios';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst PersonInfo = props => {\n  const { person, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [homeworld, setHomeworld] = useState();\n  const [progress, setProgress] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchHomeworld = () => {\n      const homeworld_url = person.homeworld.split('api/')[1];      \n      axios.get(homeworld_url).then(response => {\n        if (mounted) {          \n          setHomeworld(response.data);\n          setProgress(false);\n        }\n      });\n    };\n\n    fetchHomeworld();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> :\n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          <CardHeader \n            \n            title=\"Person info\"       \n          />\n          <Divider />\n          <CardContent className={classes.content}>\n            <Table>\n              <TableBody>            \n                <TableRow selected >\n                  <TableCell>Birthday</TableCell>\n                  <TableCell>{person.birth_year}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Eye Color</TableCell>\n                  <TableCell>{person.eye_color}</TableCell>\n                </TableRow>\n                <TableRow selected>\n                  <TableCell>Gender</TableCell>\n                  <TableCell>{person.gender}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Hair Color</TableCell>\n                  <TableCell>{person.hair_color}</TableCell>\n                </TableRow>\n                <TableRow selected>\n                  <TableCell>Height</TableCell>\n                  <TableCell>{person.height}{' centimeters'}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Homeworld</TableCell>\n                  <TableCell>{homeworld.name}</TableCell>\n                </TableRow>\n                <TableRow selected>\n                  <TableCell>Mass</TableCell>\n                  <TableCell>{person.mass}{' kilograms'}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Skin Color</TableCell>\n                  <TableCell>{person.skin_color}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </CardContent>   \n        </Card>}\n    </div>\n  );\n};\n\nPersonInfo.propTypes = {\n  className: PropTypes.string,\n  person: PropTypes.object.isRequired,  \n};\n\nexport default PersonInfo;\n","/**\n * @description Person details\n * \n * @author Allan de Miranda\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { \n  Page, \n  Header, \n  Summary, \n  Films, \n  Species, \n  Starships,\n  Vehicles,\n  Homeworld,\n  Alert\n} from 'components';\nimport { PersonInfo } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)     \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Person = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'films', label: 'Films' },\n    { value: 'species', label: 'Species'},\n    { value: 'starships', label: 'Starships'},\n    { value: 'vehicles', label: 'Vehicles'},\n    { value: 'homeworld', label: 'Homeworld'}\n  ];\n\n  if (!tab) {\n    return <Redirect to={`/person/${id}/summary`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  const [person, setPerson] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchPerson = () => {\n      axios.get('/people/'+ id +'/').then(response => {\n        if (mounted) {\n          setPerson(response.data); \n        }\n      }).catch((error)=>{\n        setError(error)\n      });\n    };\n\n    fetchPerson();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!person) {\n    if(error){\n      return (\n        <Page\n          className={classes.root}\n          title=\"Starship Details\"\n        >\n          <Alert\n            message={error.message}\n            variant={'error'}\n          />\n        </Page>);\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Person Details\"\n    >\n      <Header \n        subTitle={'Person'}\n        title={person.name} \n      />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'summary' && \n        <Summary \n          component={<PersonInfo person={person} />}\n        />}\n        {tab === 'films' && \n        <Films \n          data={person} \n          title={'Person Films'} \n        />}\n        {tab === 'species' && \n        <Species \n          data={person} \n          title={'Person Species'} \n        />}\n        {tab === 'starships' && \n        <Starships \n          data={person} \n          title={'Person Starships'} \n        />}\n        {tab === 'vehicles' && \n        <Vehicles \n          data={person} \n          title={'Person Vehicles'} \n        />}\n        {tab === 'homeworld' && \n        <Homeworld \n          data={person} \n          title={'Person Homeworld'} \n        />}\n      </div>\n    </Page>\n  );\n};\n\nPerson.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Person;\n"],"sourceRoot":""}