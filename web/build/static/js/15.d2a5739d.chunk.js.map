{"version":3,"sources":["views/Vehicle/components/VehicleInfo/VehicleInfo.js","views/Vehicle/Vehicle.js"],"names":["useStyles","makeStyles","theme","root","content","padding","actions","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","spacing","VehicleInfo","props","vehicle","className","rest","classes","useState","progress","setProgress","useEffect","CircularProgress","Card","clsx","CardHeader","title","Divider","CardContent","Table","TableBody","TableRow","selected","TableCell","cargo_capacity","consumables","cost_in_credits","crew","length","model","passengers","vehicle_class","tabs","marginTop","divider","backgroundColor","colors","grey","Vehicle","match","history","params","id","tab","value","label","to","find","t","setVehicle","error","setError","mounted","axios","get","then","response","data","catch","subTitle","name","Tabs","onChange","event","push","scrollButtons","variant","map","Tab","component","message"],"mappings":"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","file":"static/js/15.d2a5739d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst VehicleInfo = props => {\n  const { vehicle, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [progress, setProgress] = useState(true);\n\n  useEffect(()=>{\n    if(vehicle){\n      setProgress(false)\n    }\n  },[vehicle])\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> : \n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          <CardHeader \n            \n            title=\"Vehicle info\" \n          />\n          <Divider />\n          <CardContent className={classes.content}>\n            <Table>\n              <TableBody>            \n                <TableRow selected >\n                  <TableCell>Cargo Capacity</TableCell>\n                  <TableCell>{vehicle.cargo_capacity} {' kilograms'}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Consumables</TableCell>\n                  <TableCell>{vehicle.consumables}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Cost in Credits</TableCell>\n                  <TableCell>{vehicle.cost_in_credits} {' Galactic Credits'}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Crew</TableCell>\n                  <TableCell>{vehicle.crew} {' personnel'}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Length</TableCell>\n                  <TableCell>{vehicle.length} {' meters'}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>Max Atmosphering Speed</TableCell>\n                  <TableCell>{vehicle.length} {' meters'}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Model</TableCell>\n                  <TableCell>{vehicle.model}</TableCell>\n                </TableRow>\n                <TableRow >\n                  <TableCell>passengers</TableCell>\n                  <TableCell>{vehicle.passengers}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Vehicle Class</TableCell>\n                  <TableCell>{vehicle.vehicle_class}</TableCell>\n                </TableRow>                \n              </TableBody>\n            </Table>\n          </CardContent>   \n        </Card>}\n    </div>\n  );\n};\n\nVehicleInfo.propTypes = {\n  className: PropTypes.string,\n  vehicle: PropTypes.object.isRequired,  \n};\n\nexport default VehicleInfo;\n","/**\n * @description Vehicle details\n * \n * @author Allan de Miranda\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport axios from 'utils/axios';\nimport { \n  Page, \n  Header, \n  Summary, \n  Films, \n  Pilots,\n  Alert\n} from 'components';\nimport { VehicleInfo } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)     \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Vehicle = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'films', label: 'Films' },\n    { value: 'pilots', label: 'Pilots'}\n  ];\n\n  if (!tab) {\n    return <Redirect to={`/vehicle/${id}/summary`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  const [vehicle, setVehicle] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchVehicle = () => {\n      axios.get('/vehicles/'+ id +'/').then(response => {\n        if (mounted) {\n          setVehicle(response.data); \n        }\n      }).catch((error)=>{\n        setError(error)\n      });\n    };\n\n    fetchVehicle();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!vehicle) {\n    if(error){\n      return (\n        <Page\n          className={classes.root}\n          title=\"Vehicle Details\"\n        >\n          <Alert\n            message={error.message}\n            variant={'error'}\n          />\n        </Page>);\n    } else {\n      return null;\n    }\n  }\n\n  return (      \n    <Page\n      className={classes.root}\n      title=\"Vehicle Details\"\n    >\n      <Header \n        subTitle={'Vehicle'}\n        title={vehicle.name} \n      />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'summary' && \n        <Summary \n          component={<VehicleInfo vehicle={vehicle} />}\n        />}\n        {tab === 'films' && \n        <Films \n          data={vehicle} \n          title={'Vehicle Films'} \n        />}\n        {tab === 'pilots' && \n        <Pilots \n          data={vehicle}\n          title={'Vehicle Pilots'}\n        />}        \n      </div>\n    </Page>\n  );\n};\n\nVehicle.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Vehicle;\n"],"sourceRoot":""}